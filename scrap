/*
cpairhmm_rec(match,[A|ARest],[B|BRest],ConstraintsBefore,[[A,B]|AlignmentRest]) :-
	cmsw(trans(match), NextState),
	cmsw(emit(match), [A,B]),
	check_constraints([A,B],ConstraintsBefore,ConstraintsAfter),
	cpairhmm_rec(NextState,ARest,BRest,ConstraintsAfter,AlignmentRest).

cpairhmm_rec(delete,ARest,[B|BRest],ConstraintsBefore,[[-,B]|AlignmentRest]) :-
	cmsw(trans(delete), NextState),
	cmsw(emit(delete),B),
	check_constraints([-,B],ConstraintsBefore,ConstraintsAfter),
	cpairhmm_rec(NextState,ARest,BRest,ConstraintsAfter,AlignmentRest).

cpairhmm_rec(insert,[A|ARest],BRest,ConstraintsBefore,[[A,-]|AlignmentRest]) :-
	cmsw(trans(insert), NextState),
	cmsw(emit(insert),A),
	check_constraints([A,-],ConstraintsBefore,ConstraintsAfter),
	cpairhmm_rec(NextState,ARest,BRest,ConstraintsAfter,AlignmentRest).
*/




cpairhmm(InputA,InputB,Alignment) :-
	initial_empty_constraint_store(Constraints),
	fake_msw(trans(begin), StartState),
	write(cpairhmm_rec(StartState,InputA,InputB,Constraints,Alignment)),nl,
	cpairhmm_rec(StartState,InputA,InputB,Constraints,Alignment).

cpairhmm_rec(_,[],[],_,[]) :- write('termination'), nl, !.

cpairhmm_rec(match,[A|ARest],[B|BRest],ConstraintsBefore,[[A,B]|AlignmentRest]) :-
	write('match'),nl,
	fake_msw(emit(match), [A,B]),
	write('match2'),nl,	
	check_constraints([A,B],ConstraintsBefore,ConstraintsAfter),
	write('match3'),nl,		
	fake_msw(trans(match), NextState),
	write('match4'),nl,
	cpairhmm_rec(NextState,ARest,BRest,ConstraintsAfter,AlignmentRest).

cpairhmm_rec(delete,ARest,[B|BRest],ConstraintsBefore,[[-,B]|AlignmentRest]) :-
	write('delete1'),nl,
	fake_msw(emit(delete),B),
	write('delete2'),nl,
	check_constraints([-,B],ConstraintsBefore,ConstraintsAfter),
	write('delete3'),nl,
	fake_msw(trans(delete), NextState),
	write('delete4'),nl,
	write(	cpairhmm_rec(NextState,ARest,BRest,ConstraintsAfter,AlignmentRest)),nl,
	cpairhmm_rec(NextState,ARest,BRest,ConstraintsAfter,AlignmentRest).

cpairhmm_rec(insert,[A|ARest],BRest,ConstraintsBefore,[[A,-]|AlignmentRest]) :-
	write('insert1'),nl,	
	fake_msw(emit(insert),A),
	write('insert2'),nl,
	check_constraints([A,-],ConstraintsBefore,ConstraintsAfter),
	write('insert3'),nl,
	fake_msw(trans(insert), NextState),
	write('insert4'),nl,
	write(cpairhmm_rec(NextState,ARest,BRest,ConstraintsAfter,AlignmentRest)),nl,
	cpairhmm_rec(NextState,ARest,BRest,ConstraintsAfter,AlignmentRest).


%%% sIMPLE unconstrained version:

cpairhmm(InputA,InputB,Alignment) :-
	cmsw(trans(begin), StartState),
	write(cpairhmm_rec(StartState,InputA,InputB,Alignment)),nl,
	cpairhmm_rec(StartState,InputA,InputB,Alignment).

cpairhmm_rec(_,[],[],[]) :- write('termination'), nl, !.

cpairhmm_rec(match,[A|ARest],[B|BRest],[[A,B]|AlignmentRest]) :-
	cmsw(emit(match), [A,B]),
	cmsw(trans(match), NextState),
	cpairhmm_rec(NextState,ARest,BRest,AlignmentRest).

cpairhmm_rec(delete,ARest,[B|BRest],[[-,B]|AlignmentRest]) :-
	cmsw(emit(delete),B),
	cmsw(trans(delete), NextState),
	cpairhmm_rec(NextState,ARest,BRest,AlignmentRest).

cpairhmm_rec(insert,[A|ARest],BRest,[[A,-]|AlignmentRest]) :-
	cmsw(emit(insert),A),
	cmsw(trans(insert), NextState),
	cpairhmm_rec(NextState,ARest,BRest,AlignmentRest).

cpairhmm_rec(_,_,_,[failure]) :- !.



['cpairhmm'].
['cpairhmm.psm'].
constraint_check(fix_alignment(1,1,[match]), [match,[a,a]], [0,0,[insert]],X).



/*
cpairhmm(PreviousState,[],[B|BRest], ConstraintsBefore,[Emit|AlignmentRest]) :-
	cmsw(trans(PreviousState), delete),
	emit(delete,-,B,Emit),
	check_constraints([delete,Emit],ConstraintsBefore,ConstraintsAfter),
	cpairhmm(A,B,Constraints,Alignment).

	cpairhmm_next(NextState,[],[B|BRest],ConstraintsAfter,AlignmentRest).

cpairhmm(PreviousState,[A|ARest],[], ConstraintsBefore,[Emit|AlignmentRest]) :-
	cmsw(trans(PreviousState), NextState),
	emit(NextState,-,B,Emit), % NextState==insert
	check_constraints([NextState,Emit],ConstraintsBefore,ConstraintsAfter),
	cpairhmm_next(NextState,[A|ARest],[B|BRest],ConstraintsAfter,AlignmentRest).
*/
